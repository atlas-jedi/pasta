name: Homologação CI/CD

on:
  push:
    branches: ["hom"]
  pull_request:
    branches: ["hom"]

jobs:
  validate:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.9"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Lint with Flake8
        run: |
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=100 --statistics

      - name: Prepare homologation environment for tests
        run: |
          cp .env.homologation .env
          # Definir explicitamente o ambiente para homologação
          echo "FLASK_ENV=homologation" >> $GITHUB_ENV
          echo "Ambiente de homologação configurado para os testes"

      - name: Run Tests
        env:
          FLASK_ENV: homologation
        run: |
          echo "Executando testes no ambiente de homologação - testes do Cloudinary serão pulados"
          pytest -v

      - name: Set up successful validation flag
        if: success()
        run: echo "VALIDATION_SUCCESS=true" >> $GITHUB_ENV

  deploy:
    needs: validate
    if: success() && github.event_name == 'push'
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Install Render CLI
        run: |
          curl -s https://render.com/download/cli | bash

      - name: Deploy to Render
        env:
          RENDER_API_KEY: ${{ secrets.RENDER_API_KEY }}
        run: |
          # Configurar ambiente de homologação
          cp .env.homologation .env

          # Deploy usando a CLI do Render ou API
          # O comando exato depende da configuração do seu serviço no Render
          # Este é um exemplo que pode precisar ser ajustado:
          render deploy --service-id "${{ secrets.RENDER_SERVICE_ID }}"
