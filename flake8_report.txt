.\app\__init__.py:9:1: D103 Missing docstring in public function
def create_app(test_config=None):
^
.\app\__init__.py:18:32: Q000 Double quotes found but single quotes preferred
        app.config.from_pyfile("config.py", silent=True)
                               ^
.\app\__init__.py:24:28: Q000 Double quotes found but single quotes preferred
    os.makedirs(app.config["UPLOAD_FOLDER"], exist_ok=True)
                           ^
.\app\__init__.py:27:23: Q000 Double quotes found but single quotes preferred
    if all(app.config["CLOUDINARY"].values()):
                      ^
.\app\__init__.py:29:35: Q000 Double quotes found but single quotes preferred
            cloud_name=app.config["CLOUDINARY"]["cloud_name"],
                                  ^
.\app\__init__.py:29:49: Q000 Double quotes found but single quotes preferred
            cloud_name=app.config["CLOUDINARY"]["cloud_name"],
                                                ^
.\app\__init__.py:30:32: Q000 Double quotes found but single quotes preferred
            api_key=app.config["CLOUDINARY"]["api_key"],
                               ^
.\app\__init__.py:30:46: Q000 Double quotes found but single quotes preferred
            api_key=app.config["CLOUDINARY"]["api_key"],
                                             ^
.\app\__init__.py:31:35: Q000 Double quotes found but single quotes preferred
            api_secret=app.config["CLOUDINARY"]["api_secret"],
                                  ^
.\app\__init__.py:31:49: Q000 Double quotes found but single quotes preferred
            api_secret=app.config["CLOUDINARY"]["api_secret"],
                                                ^
.\app\config.py:4:1: D101 Missing docstring in public class
class Config:
^
.\app\config.py:5:33: Q000 Double quotes found but single quotes preferred
    SECRET_KEY = os.environ.get("SECRET_KEY", "dev")
                                ^
.\app\config.py:5:47: Q000 Double quotes found but single quotes preferred
    SECRET_KEY = os.environ.get("SECRET_KEY", "dev")
                                              ^
.\app\config.py:6:21: Q000 Double quotes found but single quotes preferred
    UPLOAD_FOLDER = "uploads"
                    ^
.\app\config.py:11:9: Q000 Double quotes found but single quotes preferred
        "cloud_name": os.environ.get("CLOUDINARY_CLOUD_NAME"),
        ^
.\app\config.py:11:38: Q000 Double quotes found but single quotes preferred
        "cloud_name": os.environ.get("CLOUDINARY_CLOUD_NAME"),
                                     ^
.\app\config.py:12:9: Q000 Double quotes found but single quotes preferred
        "api_key": os.environ.get("CLOUDINARY_API_KEY"),
        ^
.\app\config.py:12:35: Q000 Double quotes found but single quotes preferred
        "api_key": os.environ.get("CLOUDINARY_API_KEY"),
                                  ^
.\app\config.py:13:9: Q000 Double quotes found but single quotes preferred
        "api_secret": os.environ.get("CLOUDINARY_API_SECRET"),
        ^
.\app\config.py:13:38: Q000 Double quotes found but single quotes preferred
        "api_secret": os.environ.get("CLOUDINARY_API_SECRET"),
                                     ^
.\app\modules\file_manager\routes.py:18:5: Q000 Double quotes found but single quotes preferred
    "file_manager", __name__, template_folder="templates", static_folder="static", url_prefix="/"
    ^
.\app\modules\file_manager\routes.py:18:47: Q000 Double quotes found but single quotes preferred
    "file_manager", __name__, template_folder="templates", static_folder="static", url_prefix="/"
                                              ^
.\app\modules\file_manager\routes.py:18:74: Q000 Double quotes found but single quotes preferred
    "file_manager", __name__, template_folder="templates", static_folder="static", url_prefix="/"
                                                                         ^
.\app\modules\file_manager\routes.py:18:95: Q000 Double quotes found but single quotes preferred
    "file_manager", __name__, template_folder="templates", static_folder="static", url_prefix="/"
                                                                                              ^
.\app\modules\file_manager\routes.py:23:1: D415 First line should end with a period, question mark, or exclamation point
    """Determina o tipo de recurso do Cloudinary baseado na extensão do arquivo"""
^
.\app\modules\file_manager\routes.py:24:25: Q000 Double quotes found but single quotes preferred
    image_extensions = {".jpg", ".jpeg", ".png", ".gif", ".bmp", ".webp"}
                        ^
.\app\modules\file_manager\routes.py:24:33: Q000 Double quotes found but single quotes preferred
    image_extensions = {".jpg", ".jpeg", ".png", ".gif", ".bmp", ".webp"}
                                ^
.\app\modules\file_manager\routes.py:24:42: Q000 Double quotes found but single quotes preferred
    image_extensions = {".jpg", ".jpeg", ".png", ".gif", ".bmp", ".webp"}
                                         ^
.\app\modules\file_manager\routes.py:24:50: Q000 Double quotes found but single quotes preferred
    image_extensions = {".jpg", ".jpeg", ".png", ".gif", ".bmp", ".webp"}
                                                 ^
.\app\modules\file_manager\routes.py:24:58: Q000 Double quotes found but single quotes preferred
    image_extensions = {".jpg", ".jpeg", ".png", ".gif", ".bmp", ".webp"}
                                                         ^
.\app\modules\file_manager\routes.py:24:66: Q000 Double quotes found but single quotes preferred
    image_extensions = {".jpg", ".jpeg", ".png", ".gif", ".bmp", ".webp"}
                                                                 ^
.\app\modules\file_manager\routes.py:25:25: Q000 Double quotes found but single quotes preferred
    video_extensions = {".mp4", ".mov", ".avi", ".webm"}
                        ^
.\app\modules\file_manager\routes.py:25:33: Q000 Double quotes found but single quotes preferred
    video_extensions = {".mp4", ".mov", ".avi", ".webm"}
                                ^
.\app\modules\file_manager\routes.py:25:41: Q000 Double quotes found but single quotes preferred
    video_extensions = {".mp4", ".mov", ".avi", ".webm"}
                                        ^
.\app\modules\file_manager\routes.py:25:49: Q000 Double quotes found but single quotes preferred
    video_extensions = {".mp4", ".mov", ".avi", ".webm"}
                                                ^
.\app\modules\file_manager\routes.py:29:16: Q000 Double quotes found but single quotes preferred
        return "image"
               ^
.\app\modules\file_manager\routes.py:31:16: Q000 Double quotes found but single quotes preferred
        return "video"
               ^
.\app\modules\file_manager\routes.py:32:12: Q000 Double quotes found but single quotes preferred
    return "raw"
           ^
.\app\modules\file_manager\routes.py:35:24: Q000 Double quotes found but single quotes preferred
@file_manager_bp.route("/")
                       ^
.\app\modules\file_manager\routes.py:36:1: D103 Missing docstring in public function
def index():
^
.\app\modules\file_manager\routes.py:37:29: Q000 Double quotes found but single quotes preferred
    path = request.args.get("path", "")
                            ^
.\app\modules\file_manager\routes.py:37:37: Q000 Double quotes found but single quotes preferred
    path = request.args.get("path", "")
                                    ^
.\app\modules\file_manager\routes.py:38:49: Q000 Double quotes found but single quotes preferred
    full_path = os.path.join(current_app.config["UPLOAD_FOLDER"], path)
                                                ^
.\app\modules\file_manager\routes.py:43:31: Q000 Double quotes found but single quotes preferred
    if all(current_app.config["CLOUDINARY"].values()):
                              ^
.\app\modules\file_manager\routes.py:47:22: Q000 Double quotes found but single quotes preferred
                type="upload", prefix=path if path else None, max_results=500
                     ^
.\app\modules\file_manager\routes.py:50:40: Q000 Double quotes found but single quotes preferred
            for resource in result.get("resources", []):
                                       ^
.\app\modules\file_manager\routes.py:51:54: Q000 Double quotes found but single quotes preferred
                filename = os.path.basename(resource["public_id"])
                                                     ^
.\app\modules\file_manager\routes.py:54:25: Q000 Double quotes found but single quotes preferred
                        "name": filename,
                        ^
.\app\modules\file_manager\routes.py:55:25: Q000 Double quotes found but single quotes preferred
                        "is_dir": False,
                        ^
.\app\modules\file_manager\routes.py:56:25: Q000 Double quotes found but single quotes preferred
                        "size": resource.get("bytes", 0),
                        ^
.\app\modules\file_manager\routes.py:56:46: Q000 Double quotes found but single quotes preferred
                        "size": resource.get("bytes", 0),
                                             ^
.\app\modules\file_manager\routes.py:57:25: Q000 Double quotes found but single quotes preferred
                        "path": resource["public_id"],
                        ^
.\app\modules\file_manager\routes.py:57:42: Q000 Double quotes found but single quotes preferred
                        "path": resource["public_id"],
                                         ^
.\app\modules\file_manager\routes.py:61:38: Q000 Double quotes found but single quotes preferred
            current_app.logger.error(f"Erro ao listar arquivos do Cloudinary: {e}")
                                     ^
.\app\modules\file_manager\routes.py:69:21: Q000 Double quotes found but single quotes preferred
                    "name": item,
                    ^
.\app\modules\file_manager\routes.py:70:21: Q000 Double quotes found but single quotes preferred
                    "is_dir": os.path.isdir(item_path),
                    ^
.\app\modules\file_manager\routes.py:71:21: Q000 Double quotes found but single quotes preferred
                    "size": os.path.getsize(item_path) if not os.path.isdir(item_path) else 0,
                    ^
.\app\modules\file_manager\routes.py:72:21: Q000 Double quotes found but single quotes preferred
                    "path": os.path.join(path, item),
                    ^
.\app\modules\file_manager\routes.py:76:28: Q000 Double quotes found but single quotes preferred
    return render_template("index.html", items=items, current_path=path)
                           ^
.\app\modules\file_manager\routes.py:79:24: Q000 Double quotes found but single quotes preferred
@file_manager_bp.route("/upload", methods=["POST"])
                       ^
.\app\modules\file_manager\routes.py:79:44: Q000 Double quotes found but single quotes preferred
@file_manager_bp.route("/upload", methods=["POST"])
                                           ^
.\app\modules\file_manager\routes.py:80:1: D103 Missing docstring in public function
def upload_file():
^
.\app\modules\file_manager\routes.py:81:29: Q000 Double quotes found but single quotes preferred
    path = request.form.get("path", "")
                            ^
.\app\modules\file_manager\routes.py:81:37: Q000 Double quotes found but single quotes preferred
    path = request.form.get("path", "")
                                    ^
.\app\modules\file_manager\routes.py:83:8: Q000 Double quotes found but single quotes preferred
    if "file" not in request.files:
       ^
.\app\modules\file_manager\routes.py:84:33: Q000 Double quotes found but single quotes preferred
        return redirect(url_for("file_manager.index"))
                                ^
.\app\modules\file_manager\routes.py:86:26: Q000 Double quotes found but single quotes preferred
    file = request.files["file"]
                         ^
.\app\modules\file_manager\routes.py:87:25: Q000 Double quotes found but single quotes preferred
    if file.filename == "":
                        ^
.\app\modules\file_manager\routes.py:88:33: Q000 Double quotes found but single quotes preferred
        return redirect(url_for("file_manager.index"))
                                ^
.\app\modules\file_manager\routes.py:93:31: Q000 Double quotes found but single quotes preferred
    if all(current_app.config["CLOUDINARY"].values()):
                              ^
.\app\modules\file_manager\routes.py:104:38: Q000 Double quotes found but single quotes preferred
            current_app.logger.error(f"Erro ao fazer upload para Cloudinary: {e}")
                                     ^
.\app\modules\file_manager\routes.py:108:54: Q000 Double quotes found but single quotes preferred
        target_dir = os.path.join(current_app.config["UPLOAD_FOLDER"], path)
                                                     ^
.\app\modules\file_manager\routes.py:111:29: Q000 Double quotes found but single quotes preferred
    return redirect(url_for("file_manager.index", path=path))
                            ^
.\app\modules\file_manager\routes.py:114:24: Q000 Double quotes found but single quotes preferred
@file_manager_bp.route("/delete/<path:filename>")
                       ^
.\app\modules\file_manager\routes.py:115:1: D103 Missing docstring in public function
def delete_file(filename):
^
.\app\modules\file_manager\routes.py:117:31: Q000 Double quotes found but single quotes preferred
    if all(current_app.config["CLOUDINARY"].values()):
                              ^
.\app\modules\file_manager\routes.py:122:38: Q000 Double quotes found but single quotes preferred
            current_app.logger.error(f"Erro ao deletar arquivo do Cloudinary: {e}")
                                     ^
.\app\modules\file_manager\routes.py:126:50: Q000 Double quotes found but single quotes preferred
        target = os.path.join(current_app.config["UPLOAD_FOLDER"], filename)
                                                 ^
.\app\modules\file_manager\routes.py:132:29: Q000 Double quotes found but single quotes preferred
    return redirect(url_for("file_manager.index", path=os.path.dirname(filename)))
                            ^
.\app\modules\file_manager\routes.py:135:24: Q000 Double quotes found but single quotes preferred
@file_manager_bp.route("/download/<path:filename>")
                       ^
.\app\modules\file_manager\routes.py:136:1: D103 Missing docstring in public function
def download_file(filename):
^
.\app\modules\file_manager\routes.py:138:31: Q000 Double quotes found but single quotes preferred
    if all(current_app.config["CLOUDINARY"].values()):
                              ^
.\app\modules\file_manager\routes.py:141:38: Q000 Double quotes found but single quotes preferred
            return redirect(resource["url"])
                                     ^
.\app\modules\file_manager\routes.py:143:38: Q000 Double quotes found but single quotes preferred
            current_app.logger.error(f"Erro ao obter URL do Cloudinary: {e}")
                                     ^
.\app\modules\file_manager\routes.py:146:49: Q000 Double quotes found but single quotes preferred
    directory = os.path.join(current_app.config["UPLOAD_FOLDER"], os.path.dirname(filename))
                                                ^
.\app\modules\file_manager\routes.py:150:24: Q000 Double quotes found but single quotes preferred
@file_manager_bp.route("/mkdir", methods=["POST"])
                       ^
.\app\modules\file_manager\routes.py:150:43: Q000 Double quotes found but single quotes preferred
@file_manager_bp.route("/mkdir", methods=["POST"])
                                          ^
.\app\modules\file_manager\routes.py:151:1: D103 Missing docstring in public function
def mkdir():
^
.\app\modules\file_manager\routes.py:152:29: Q000 Double quotes found but single quotes preferred
    path = request.form.get("path", "")
                            ^
.\app\modules\file_manager\routes.py:152:37: Q000 Double quotes found but single quotes preferred
    path = request.form.get("path", "")
                                    ^
.\app\modules\file_manager\routes.py:153:44: Q000 Double quotes found but single quotes preferred
    dirname = secure_filename(request.form["dirname"])
                                           ^
.\app\modules\file_manager\routes.py:156:50: Q000 Double quotes found but single quotes preferred
    target_dir = os.path.join(current_app.config["UPLOAD_FOLDER"], path, dirname)
                                                 ^
.\app\modules\file_manager\routes.py:159:29: Q000 Double quotes found but single quotes preferred
    return redirect(url_for("file_manager.index", path=path))
                            ^
.\app\modules\time_calculator\routes.py:6:5: Q000 Double quotes found but single quotes preferred
    "time_calculator",
    ^
.\app\modules\time_calculator\routes.py:8:21: Q000 Double quotes found but single quotes preferred
    template_folder="templates",
                    ^
.\app\modules\time_calculator\routes.py:9:19: Q000 Double quotes found but single quotes preferred
    static_folder="static",
                  ^
.\app\modules\time_calculator\routes.py:10:16: Q000 Double quotes found but single quotes preferred
    url_prefix="/time-calculator",
               ^
.\app\modules\time_calculator\routes.py:14:27: Q000 Double quotes found but single quotes preferred
@time_calculator_bp.route("/")
                          ^
.\app\modules\time_calculator\routes.py:15:1: D103 Missing docstring in public function
def index():
^
.\app\modules\time_calculator\routes.py:16:28: Q000 Double quotes found but single quotes preferred
    return render_template("time_calculator.html")
                           ^
.\app\modules\time_calculator\routes.py:19:27: Q000 Double quotes found but single quotes preferred
@time_calculator_bp.route("/calculate", methods=["POST"])
                          ^
.\app\modules\time_calculator\routes.py:19:50: Q000 Double quotes found but single quotes preferred
@time_calculator_bp.route("/calculate", methods=["POST"])
                                                 ^
.\app\modules\time_calculator\routes.py:20:1: D103 Missing docstring in public function
def calculate_time():
^
.\app\modules\time_calculator\routes.py:21:41: Q000 Double quotes found but single quotes preferred
    calculation_type = request.form.get("calculation_type", "add_subtract")
                                        ^
.\app\modules\time_calculator\routes.py:21:61: Q000 Double quotes found but single quotes preferred
    calculation_type = request.form.get("calculation_type", "add_subtract")
                                                            ^
.\app\modules\time_calculator\routes.py:22:35: Q000 Double quotes found but single quotes preferred
    start_time = request.form.get("start_time", "")
                                  ^
.\app\modules\time_calculator\routes.py:22:49: Q000 Double quotes found but single quotes preferred
    start_time = request.form.get("start_time", "")
                                                ^
.\app\modules\time_calculator\routes.py:23:34: Q000 Double quotes found but single quotes preferred
    operation = request.form.get("operation", "add")
                                 ^
.\app\modules\time_calculator\routes.py:23:47: Q000 Double quotes found but single quotes preferred
    operation = request.form.get("operation", "add")
                                              ^
.\app\modules\time_calculator\routes.py:24:34: Q000 Double quotes found but single quotes preferred
    hours = int(request.form.get("hours", 0))
                                 ^
.\app\modules\time_calculator\routes.py:25:36: Q000 Double quotes found but single quotes preferred
    minutes = int(request.form.get("minutes", 0))
                                   ^
.\app\modules\time_calculator\routes.py:29:56: Q000 Double quotes found but single quotes preferred
        start_datetime = datetime.strptime(start_time, "%H:%M")
                                                       ^
.\app\modules\time_calculator\routes.py:35:25: Q000 Double quotes found but single quotes preferred
        if operation == "add":
                        ^
.\app\modules\time_calculator\routes.py:41:48: Q000 Double quotes found but single quotes preferred
        result_time = result_datetime.strftime("%H:%M")
                                               ^
.\app\modules\time_calculator\routes.py:44:13: Q000 Double quotes found but single quotes preferred
            "time_calculator.html",
            ^
.\app\modules\time_calculator\routes.py:54:13: Q000 Double quotes found but single quotes preferred
            "time_calculator.html",
            ^
.\app\modules\time_calculator\routes.py:56:19: Q000 Double quotes found but single quotes preferred
            error="Formato de hora inválido. Use HH:MM",
                  ^
.\app\modules\time_calculator\routes.py:60:27: Q000 Double quotes found but single quotes preferred
@time_calculator_bp.route("/calculate-difference", methods=["POST"])
                          ^
.\app\modules\time_calculator\routes.py:60:61: Q000 Double quotes found but single quotes preferred
@time_calculator_bp.route("/calculate-difference", methods=["POST"])
                                                            ^
.\app\modules\time_calculator\routes.py:61:1: D103 Missing docstring in public function
def calculate_time_difference():
^
.\app\modules\time_calculator\routes.py:62:41: Q000 Double quotes found but single quotes preferred
    calculation_type = request.form.get("calculation_type", "difference")
                                        ^
.\app\modules\time_calculator\routes.py:62:61: Q000 Double quotes found but single quotes preferred
    calculation_type = request.form.get("calculation_type", "difference")
                                                            ^
.\app\modules\time_calculator\routes.py:63:35: Q000 Double quotes found but single quotes preferred
    start_time = request.form.get("start_time_diff", "")
                                  ^
.\app\modules\time_calculator\routes.py:63:54: Q000 Double quotes found but single quotes preferred
    start_time = request.form.get("start_time_diff", "")
                                                     ^
.\app\modules\time_calculator\routes.py:64:33: Q000 Double quotes found but single quotes preferred
    end_time = request.form.get("end_time_diff", "")
                                ^
.\app\modules\time_calculator\routes.py:64:50: Q000 Double quotes found but single quotes preferred
    end_time = request.form.get("end_time_diff", "")
                                                 ^
.\app\modules\time_calculator\routes.py:68:56: Q000 Double quotes found but single quotes preferred
        start_datetime = datetime.strptime(start_time, "%H:%M")
                                                       ^
.\app\modules\time_calculator\routes.py:69:52: Q000 Double quotes found but single quotes preferred
        end_datetime = datetime.strptime(end_time, "%H:%M")
                                                   ^
.\app\modules\time_calculator\routes.py:86:13: Q000 Double quotes found but single quotes preferred
            "time_calculator.html",
            ^
.\app\modules\time_calculator\routes.py:95:13: Q000 Double quotes found but single quotes preferred
            "time_calculator.html",
            ^
.\app\modules\time_calculator\routes.py:97:19: Q000 Double quotes found but single quotes preferred
            error="Formato de hora inválido. Use HH:MM",
                  ^
.\format.py:6:1: I100 Import statements are in the wrong order. 'from pathlib import Path' should be before 'import sys'
from pathlib import Path
^
.\format.py:11:11: Q000 Double quotes found but single quotes preferred
    print(f"\n=== Running {description} ===")
          ^
.\format.py:15:63: Q000 Double quotes found but single quotes preferred
            command, capture_output=True, text=True, encoding="utf-8", errors="replace"
                                                              ^
.\format.py:15:79: Q000 Double quotes found but single quotes preferred
            command, capture_output=True, text=True, encoding="utf-8", errors="replace"
                                                                              ^
.\format.py:19:19: Q000 Double quotes found but single quotes preferred
            print(f"Errors:\n{result.stderr}", file=sys.stderr)
                  ^
.\format.py:22:15: Q000 Double quotes found but single quotes preferred
        print(f"Error running {description}: {str(e)}", file=sys.stderr)
              ^
.\format.py:29:5: F841 local variable 'project_root' is assigned to but never used
    project_root = Path(__file__).parent
    ^
.\format.py:33:11: Q000 Double quotes found but single quotes preferred
        (["isort", "."], "isort to sort imports"),
          ^
.\format.py:33:20: Q000 Double quotes found but single quotes preferred
        (["isort", "."], "isort to sort imports"),
                   ^
.\format.py:33:26: Q000 Double quotes found but single quotes preferred
        (["isort", "."], "isort to sort imports"),
                         ^
.\format.py:34:11: Q000 Double quotes found but single quotes preferred
        (["black", "."], "black to format code"),
          ^
.\format.py:34:20: Q000 Double quotes found but single quotes preferred
        (["black", "."], "black to format code"),
                   ^
.\format.py:34:26: Q000 Double quotes found but single quotes preferred
        (["black", "."], "black to format code"),
                         ^
.\format.py:35:11: Q000 Double quotes found but single quotes preferred
        (["autopep8", "--in-place", "--recursive", "."], "autopep8 to fix remaining issues"),
          ^
.\format.py:35:23: Q000 Double quotes found but single quotes preferred
        (["autopep8", "--in-place", "--recursive", "."], "autopep8 to fix remaining issues"),
                      ^
.\format.py:35:37: Q000 Double quotes found but single quotes preferred
        (["autopep8", "--in-place", "--recursive", "."], "autopep8 to fix remaining issues"),
                                    ^
.\format.py:35:52: Q000 Double quotes found but single quotes preferred
        (["autopep8", "--in-place", "--recursive", "."], "autopep8 to fix remaining issues"),
                                                   ^
.\format.py:35:58: Q000 Double quotes found but single quotes preferred
        (["autopep8", "--in-place", "--recursive", "."], "autopep8 to fix remaining issues"),
                                                         ^
.\format.py:37:14: Q000 Double quotes found but single quotes preferred
            ["flake8", "--output-file=flake8_report.txt", "."],
             ^
.\format.py:37:24: Q000 Double quotes found but single quotes preferred
            ["flake8", "--output-file=flake8_report.txt", "."],
                       ^
.\format.py:37:59: Q000 Double quotes found but single quotes preferred
            ["flake8", "--output-file=flake8_report.txt", "."],
                                                          ^
.\format.py:38:13: Q000 Double quotes found but single quotes preferred
            "flake8 to check for remaining issues",
            ^
.\format.py:51:17: Q000 Double quotes found but single quotes preferred
        if Path("flake8_report.txt").exists():
                ^
.\format.py:52:19: Q000 Double quotes found but single quotes preferred
            print("\n=== Flake8 Report ===")
                  ^
.\format.py:53:23: Q000 Double quotes found but single quotes preferred
            with open("flake8_report.txt", "r", encoding="utf-8") as f:
                      ^
.\format.py:53:44: Q000 Double quotes found but single quotes preferred
            with open("flake8_report.txt", "r", encoding="utf-8") as f:
                                           ^
.\format.py:53:58: Q000 Double quotes found but single quotes preferred
            with open("flake8_report.txt", "r", encoding="utf-8") as f:
                                                         ^
.\format.py:55:18: Q000 Double quotes found but single quotes preferred
            Path("flake8_report.txt").unlink()  # Remove o arquivo temporário
                 ^
.\format.py:57:15: Q000 Double quotes found but single quotes preferred
        print(f"Error reading flake8 report: {str(e)}", file=sys.stderr)
              ^
.\format.py:60:15: Q000 Double quotes found but single quotes preferred
.\app\__init__.py:9:1: D103 Missing docstring in public function
def create_app(test_config=None):
^
.\app\__init__.py:18:32: Q000 Double quotes found but single quotes preferred
        app.config.from_pyfile("config.py", silent=True)
                               ^
.\app\__init__.py:24:28: Q000 Double quotes found but single quotes preferred
    os.makedirs(app.config["UPLOAD_FOLDER"], exist_ok=True)
                           ^
.\app\__init__.py:27:23: Q000 Double quotes found but single quotes preferred
    if all(app.config["CLOUDINARY"].values()):
                      ^
.\app\__init__.py:29:35: Q000 Double quotes found but single quotes preferred
            cloud_name=app.config["CLOUDINARY"]["cloud_name"],
                                  ^
.\app\__init__.py:29:49: Q000 Double quotes found but single quotes preferred
            cloud_name=app.config["CLOUDINARY"]["cloud_name"],
                                                ^
.\app\__init__.py:30:32: Q000 Double quotes found but single quotes preferred
            api_key=app.config["CLOUDINARY"]["api_key"],
                               ^
.\app\__init__.py:30:46: Q000 Double quotes found but single quotes preferred
            api_key=app.config["CLOUDINARY"]["api_key"],
                                             ^
.\app\__init__.py:31:35: Q000 Double quotes found but single quotes preferred
            api_secret=app.config["CLOUDINARY"]["api_secret"],
                                  ^
.\app\__init__.py:31:49: Q000 Double quotes found but single quotes preferred
            api_secret=app.config["CLOUDINARY"]["api_secret"],
                                                ^
.\app\config.py:4:1: D101 Missing docstring in public class
class Config:
^
.\app\config.py:5:33: Q000 Double quotes found but single quotes preferred
    SECRET_KEY = os.environ.get("SECRET_KEY", "dev")
                                ^
.\app\config.py:5:47: Q000 Double quotes found but single quotes preferred
    SECRET_KEY = os.environ.get("SECRET_KEY", "dev")
                                              ^
.\app\config.py:6:21: Q000 Double quotes found but single quotes preferred
    UPLOAD_FOLDER = "uploads"
                    ^
.\app\config.py:11:9: Q000 Double quotes found but single quotes preferred
        "cloud_name": os.environ.get("CLOUDINARY_CLOUD_NAME"),
        ^
.\app\config.py:11:38: Q000 Double quotes found but single quotes preferred
        "cloud_name": os.environ.get("CLOUDINARY_CLOUD_NAME"),
                                     ^
.\app\config.py:12:9: Q000 Double quotes found but single quotes preferred
        "api_key": os.environ.get("CLOUDINARY_API_KEY"),
        ^
.\app\config.py:12:35: Q000 Double quotes found but single quotes preferred
        "api_key": os.environ.get("CLOUDINARY_API_KEY"),
                                  ^
.\app\config.py:13:9: Q000 Double quotes found but single quotes preferred
        "api_secret": os.environ.get("CLOUDINARY_API_SECRET"),
        ^
.\app\config.py:13:38: Q000 Double quotes found but single quotes preferred
        "api_secret": os.environ.get("CLOUDINARY_API_SECRET"),
                                     ^
.\app\modules\file_manager\routes.py:18:5: Q000 Double quotes found but single quotes preferred
    "file_manager", __name__, template_folder="templates", static_folder="static", url_prefix="/"
    ^
.\app\modules\file_manager\routes.py:18:47: Q000 Double quotes found but single quotes preferred
    "file_manager", __name__, template_folder="templates", static_folder="static", url_prefix="/"
                                              ^
.\app\modules\file_manager\routes.py:18:74: Q000 Double quotes found but single quotes preferred
    "file_manager", __name__, template_folder="templates", static_folder="static", url_prefix="/"
                                                                         ^
.\app\modules\file_manager\routes.py:18:95: Q000 Double quotes found but single quotes preferred
    "file_manager", __name__, template_folder="templates", static_folder="static", url_prefix="/"
                                                                                              ^
.\app\modules\file_manager\routes.py:23:1: D415 First line should end with a period, question mark, or exclamation point
    """Determina o tipo de recurso do Cloudinary baseado na extensão do arquivo"""
^
.\app\modules\file_manager\routes.py:24:25: Q000 Double quotes found but single quotes preferred
    image_extensions = {".jpg", ".jpeg", ".png", ".gif", ".bmp", ".webp"}
                        ^
.\app\modules\file_manager\routes.py:24:33: Q000 Double quotes found but single quotes preferred
    image_extensions = {".jpg", ".jpeg", ".png", ".gif", ".bmp", ".webp"}
                                ^
.\app\modules\file_manager\routes.py:24:42: Q000 Double quotes found but single quotes preferred
    image_extensions = {".jpg", ".jpeg", ".png", ".gif", ".bmp", ".webp"}
                                         ^
.\app\modules\file_manager\routes.py:24:50: Q000 Double quotes found but single quotes preferred
    image_extensions = {".jpg", ".jpeg", ".png", ".gif", ".bmp", ".webp"}
                                                 ^
.\app\modules\file_manager\routes.py:24:58: Q000 Double quotes found but single quotes preferred
    image_extensions = {".jpg", ".jpeg", ".png", ".gif", ".bmp", ".webp"}
                                                         ^
.\app\modules\file_manager\routes.py:24:66: Q000 Double quotes found but single quotes preferred
    image_extensions = {".jpg", ".jpeg", ".png", ".gif", ".bmp", ".webp"}
                                                                 ^
.\app\modules\file_manager\routes.py:25:25: Q000 Double quotes found but single quotes preferred
    video_extensions = {".mp4", ".mov", ".avi", ".webm"}
                        ^
.\app\modules\file_manager\routes.py:25:33: Q000 Double quotes found but single quotes preferred
    video_extensions = {".mp4", ".mov", ".avi", ".webm"}
                                ^
.\app\modules\file_manager\routes.py:25:41: Q000 Double quotes found but single quotes preferred
    video_extensions = {".mp4", ".mov", ".avi", ".webm"}
                                        ^
.\app\modules\file_manager\routes.py:25:49: Q000 Double quotes found but single quotes preferred
    video_extensions = {".mp4", ".mov", ".avi", ".webm"}
                                                ^
.\app\modules\file_manager\routes.py:29:16: Q000 Double quotes found but single quotes preferred
        return "image"
               ^
.\app\modules\file_manager\routes.py:31:16: Q000 Double quotes found but single quotes preferred
        return "video"
               ^
.\app\modules\file_manager\routes.py:32:12: Q000 Double quotes found but single quotes preferred
    return "raw"
           ^
.\app\modules\file_manager\routes.py:35:24: Q000 Double quotes found but single quotes preferred
@file_manager_bp.route("/")
                       ^
.\app\modules\file_manager\routes.py:36:1: D103 Missing docstring in public function
def index():
^
.\app\modules\file_manager\routes.py:37:29: Q000 Double quotes found but single quotes preferred
    path = request.args.get("path", "")
                            ^
.\app\modules\file_manager\routes.py:37:37: Q000 Double quotes found but single quotes preferred
    path = request.args.get("path", "")
                                    ^
.\app\modules\file_manager\routes.py:38:49: Q000 Double quotes found but single quotes preferred
    full_path = os.path.join(current_app.config["UPLOAD_FOLDER"], path)
                                                ^
.\app\modules\file_manager\routes.py:43:31: Q000 Double quotes found but single quotes preferred
    if all(current_app.config["CLOUDINARY"].values()):
                              ^
.\app\modules\file_manager\routes.py:47:22: Q000 Double quotes found but single quotes preferred
                type="upload", prefix=path if path else None, max_results=500
                     ^
.\app\modules\file_manager\routes.py:50:40: Q000 Double quotes found but single quotes preferred
            for resource in result.get("resources", []):
                                       ^
.\app\modules\file_manager\routes.py:51:54: Q000 Double quotes found but single quotes preferred
                filename = os.path.basename(resource["public_id"])
                                                     ^
.\app\modules\file_manager\routes.py:54:25: Q000 Double quotes found but single quotes preferred
                        "name": filename,
                        ^
.\app\modules\file_manager\routes.py:55:25: Q000 Double quotes found but single quotes preferred
                        "is_dir": False,
                        ^
.\app\modules\file_manager\routes.py:56:25: Q000 Double quotes found but single quotes preferred
                        "size": resource.get("bytes", 0),
                        ^
.\app\modules\file_manager\routes.py:56:46: Q000 Double quotes found but single quotes preferred
                        "size": resource.get("bytes", 0),
                                             ^
.\app\modules\file_manager\routes.py:57:25: Q000 Double quotes found but single quotes preferred
                        "path": resource["public_id"],
                        ^
.\app\modules\file_manager\routes.py:57:42: Q000 Double quotes found but single quotes preferred
                        "path": resource["public_id"],
                                         ^
.\app\modules\file_manager\routes.py:61:38: Q000 Double quotes found but single quotes preferred
            current_app.logger.error(f"Erro ao listar arquivos do Cloudinary: {e}")
                                     ^
.\app\modules\file_manager\routes.py:69:21: Q000 Double quotes found but single quotes preferred
                    "name": item,
                    ^
.\app\modules\file_manager\routes.py:70:21: Q000 Double quotes found but single quotes preferred
                    "is_dir": os.path.isdir(item_path),
                    ^
.\app\modules\file_manager\routes.py:71:21: Q000 Double quotes found but single quotes preferred
                    "size": os.path.getsize(item_path) if not os.path.isdir(item_path) else 0,
                    ^
.\app\modules\file_manager\routes.py:72:21: Q000 Double quotes found but single quotes preferred
                    "path": os.path.join(path, item),
                    ^
.\app\modules\file_manager\routes.py:76:28: Q000 Double quotes found but single quotes preferred
    return render_template("index.html", items=items, current_path=path)
                           ^
.\app\modules\file_manager\routes.py:79:24: Q000 Double quotes found but single quotes preferred
@file_manager_bp.route("/upload", methods=["POST"])
                       ^
.\app\modules\file_manager\routes.py:79:44: Q000 Double quotes found but single quotes preferred
@file_manager_bp.route("/upload", methods=["POST"])
                                           ^
.\app\modules\file_manager\routes.py:80:1: D103 Missing docstring in public function
def upload_file():
^
.\app\modules\file_manager\routes.py:81:29: Q000 Double quotes found but single quotes preferred
    path = request.form.get("path", "")
                            ^
.\app\modules\file_manager\routes.py:81:37: Q000 Double quotes found but single quotes preferred
    path = request.form.get("path", "")
                                    ^
.\app\modules\file_manager\routes.py:83:8: Q000 Double quotes found but single quotes preferred
    if "file" not in request.files:
       ^
.\app\modules\file_manager\routes.py:84:33: Q000 Double quotes found but single quotes preferred
        return redirect(url_for("file_manager.index"))
                                ^
.\app\modules\file_manager\routes.py:86:26: Q000 Double quotes found but single quotes preferred
    file = request.files["file"]
                         ^
.\app\modules\file_manager\routes.py:87:25: Q000 Double quotes found but single quotes preferred
    if file.filename == "":
                        ^
.\app\modules\file_manager\routes.py:88:33: Q000 Double quotes found but single quotes preferred
        return redirect(url_for("file_manager.index"))
                                ^
.\app\modules\file_manager\routes.py:93:31: Q000 Double quotes found but single quotes preferred
    if all(current_app.config["CLOUDINARY"].values()):
                              ^
.\app\modules\file_manager\routes.py:104:38: Q000 Double quotes found but single quotes preferred
            current_app.logger.error(f"Erro ao fazer upload para Cloudinary: {e}")
                                     ^
.\app\modules\file_manager\routes.py:108:54: Q000 Double quotes found but single quotes preferred
        target_dir = os.path.join(current_app.config["UPLOAD_FOLDER"], path)
                                                     ^
.\app\modules\file_manager\routes.py:111:29: Q000 Double quotes found but single quotes preferred
    return redirect(url_for("file_manager.index", path=path))
                            ^
.\app\modules\file_manager\routes.py:114:24: Q000 Double quotes found but single quotes preferred
@file_manager_bp.route("/delete/<path:filename>")
                       ^
.\app\modules\file_manager\routes.py:115:1: D103 Missing docstring in public function
def delete_file(filename):
^
.\app\modules\file_manager\routes.py:117:31: Q000 Double quotes found but single quotes preferred
    if all(current_app.config["CLOUDINARY"].values()):
                              ^
.\app\modules\file_manager\routes.py:122:38: Q000 Double quotes found but single quotes preferred
            current_app.logger.error(f"Erro ao deletar arquivo do Cloudinary: {e}")
                                     ^
.\app\modules\file_manager\routes.py:126:50: Q000 Double quotes found but single quotes preferred
        target = os.path.join(current_app.config["UPLOAD_FOLDER"], filename)
                                                 ^
.\app\modules\file_manager\routes.py:132:29: Q000 Double quotes found but single quotes preferred
    return redirect(url_for("file_manager.index", path=os.path.dirname(filename)))
                            ^
.\app\modules\file_manager\routes.py:135:24: Q000 Double quotes found but single quotes preferred
@file_manager_bp.route("/download/<path:filename>")
                       ^
.\app\modules\file_manager\routes.py:136:1: D103 Missing docstring in public function
def download_file(filename):
^
.\app\modules\file_manager\routes.py:138:31: Q000 Double quotes found but single quotes preferred
    if all(current_app.config["CLOUDINARY"].values()):
                              ^
.\app\modules\file_manager\routes.py:141:38: Q000 Double quotes found but single quotes preferred
            return redirect(resource["url"])
                                     ^
.\app\modules\file_manager\routes.py:143:38: Q000 Double quotes found but single quotes preferred
            current_app.logger.error(f"Erro ao obter URL do Cloudinary: {e}")
                                     ^
.\app\modules\file_manager\routes.py:146:49: Q000 Double quotes found but single quotes preferred
    directory = os.path.join(current_app.config["UPLOAD_FOLDER"], os.path.dirname(filename))
                                                ^
.\app\modules\file_manager\routes.py:150:24: Q000 Double quotes found but single quotes preferred
@file_manager_bp.route("/mkdir", methods=["POST"])
                       ^
.\app\modules\file_manager\routes.py:150:43: Q000 Double quotes found but single quotes preferred
@file_manager_bp.route("/mkdir", methods=["POST"])
                                          ^
.\app\modules\file_manager\routes.py:151:1: D103 Missing docstring in public function
def mkdir():
^
.\app\modules\file_manager\routes.py:152:29: Q000 Double quotes found but single quotes preferred
    path = request.form.get("path", "")
                            ^
.\app\modules\file_manager\routes.py:152:37: Q000 Double quotes found but single quotes preferred
    path = request.form.get("path", "")
                                    ^
.\app\modules\file_manager\routes.py:153:44: Q000 Double quotes found but single quotes preferred
    dirname = secure_filename(request.form["dirname"])
                                           ^
.\app\modules\file_manager\routes.py:156:50: Q000 Double quotes found but single quotes preferred
    target_dir = os.path.join(current_app.config["UPLOAD_FOLDER"], path, dirname)
                                                 ^
.\app\modules\file_manager\routes.py:159:29: Q000 Double quotes found but single quotes preferred
    return redirect(url_for("file_manager.index", path=path))
                            ^
.\app\modules\time_calculator\routes.py:6:5: Q000 Double quotes found but single quotes preferred
    "time_calculator",
    ^
.\app\modules\time_calculator\routes.py:8:21: Q000 Double quotes found but single quotes preferred
    template_folder="templates",
                    ^
.\app\modules\time_calculator\routes.py:9:19: Q000 Double quotes found but single quotes preferred
    static_folder="static",
                  ^
.\app\modules\time_calculator\routes.py:10:16: Q000 Double quotes found but single quotes preferred
    url_prefix="/time-calculator",
               ^
.\app\modules\time_calculator\routes.py:14:27: Q000 Double quotes found but single quotes preferred
@time_calculator_bp.route("/")
                          ^
.\app\modules\time_calculator\routes.py:15:1: D103 Missing docstring in public function
def index():
^
.\app\modules\time_calculator\routes.py:16:28: Q000 Double quotes found but single quotes preferred
    return render_template("time_calculator.html")
                           ^
.\app\modules\time_calculator\routes.py:19:27: Q000 Double quotes found but single quotes preferred
@time_calculator_bp.route("/calculate", methods=["POST"])
                          ^
.\app\modules\time_calculator\routes.py:19:50: Q000 Double quotes found but single quotes preferred
@time_calculator_bp.route("/calculate", methods=["POST"])
                                                 ^
.\app\modules\time_calculator\routes.py:20:1: D103 Missing docstring in public function
def calculate_time():
^
.\app\modules\time_calculator\routes.py:21:41: Q000 Double quotes found but single quotes preferred
    calculation_type = request.form.get("calculation_type", "add_subtract")
                                        ^
.\app\modules\time_calculator\routes.py:21:61: Q000 Double quotes found but single quotes preferred
    calculation_type = request.form.get("calculation_type", "add_subtract")
                                                            ^
.\app\modules\time_calculator\routes.py:22:35: Q000 Double quotes found but single quotes preferred
    start_time = request.form.get("start_time", "")
                                  ^
.\app\modules\time_calculator\routes.py:22:49: Q000 Double quotes found but single quotes preferred
    start_time = request.form.get("start_time", "")
                                                ^
.\app\modules\time_calculator\routes.py:23:34: Q000 Double quotes found but single quotes preferred
    operation = request.form.get("operation", "add")
                                 ^
.\app\modules\time_calculator\routes.py:23:47: Q000 Double quotes found but single quotes preferred
    operation = request.form.get("operation", "add")
                                              ^
.\app\modules\time_calculator\routes.py:24:34: Q000 Double quotes found but single quotes preferred
    hours = int(request.form.get("hours", 0))
                                 ^
.\app\modules\time_calculator\routes.py:25:36: Q000 Double quotes found but single quotes preferred
    minutes = int(request.form.get("minutes", 0))
                                   ^
.\app\modules\time_calculator\routes.py:29:56: Q000 Double quotes found but single quotes preferred
        start_datetime = datetime.strptime(start_time, "%H:%M")
                                                       ^
.\app\modules\time_calculator\routes.py:35:25: Q000 Double quotes found but single quotes preferred
        if operation == "add":
                        ^
.\app\modules\time_calculator\routes.py:41:48: Q000 Double quotes found but single quotes preferred
        result_time = result_datetime.strftime("%H:%M")
                                               ^
.\app\modules\time_calculator\routes.py:44:13: Q000 Double quotes found but single quotes preferred
            "time_calculator.html",
            ^
.\app\modules\time_calculator\routes.py:54:13: Q000 Double quotes found but single quotes preferred
            "time_calculator.html",
            ^
.\app\modules\time_calculator\routes.py:56:19: Q000 Double quotes found but single quotes preferred
            error="Formato de hora inválido. Use HH:MM",
                  ^
.\app\modules\time_calculator\routes.py:60:27: Q000 Double quotes found but single quotes preferred
@time_calculator_bp.route("/calculate-difference", methods=["POST"])
                          ^
.\app\modules\time_calculator\routes.py:60:61: Q000 Double quotes found but single quotes preferred
@time_calculator_bp.route("/calculate-difference", methods=["POST"])
                                                            ^
.\app\modules\time_calculator\routes.py:61:1: D103 Missing docstring in public function
def calculate_time_difference():
^
.\app\modules\time_calculator\routes.py:62:41: Q000 Double quotes found but single quotes preferred
    calculation_type = request.form.get("calculation_type", "difference")
                                        ^
.\app\modules\time_calculator\routes.py:62:61: Q000 Double quotes found but single quotes preferred
    calculation_type = request.form.get("calculation_type", "difference")
                                                            ^
.\app\modules\time_calculator\routes.py:63:35: Q000 Double quotes found but single quotes preferred
    start_time = request.form.get("start_time_diff", "")
                                  ^
.\app\modules\time_calculator\routes.py:63:54: Q000 Double quotes found but single quotes preferred
    start_time = request.form.get("start_time_diff", "")
                                                     ^
.\app\modules\time_calculator\routes.py:64:33: Q000 Double quotes found but single quotes preferred
    end_time = request.form.get("end_time_diff", "")
                                ^
.\app\modules\time_calculator\routes.py:64:50: Q000 Double quotes found but single quotes preferred
    end_time = request.form.get("end_time_diff", "")
                                                 ^
.\app\modules\time_calculator\routes.py:68:56: Q000 Double quotes found but single quotes preferred
        start_datetime = datetime.strptime(start_time, "%H:%M")
                                                       ^
.\app\modules\time_calculator\routes.py:69:52: Q000 Double quotes found but single quotes preferred
        end_datetime = datetime.strptime(end_time, "%H:%M")
                                                   ^
.\app\modules\time_calculator\routes.py:86:13: Q000 Double quotes found but single quotes preferred
            "time_calculator.html",
            ^
.\app\modules\time_calculator\routes.py:95:13: Q000 Double quotes found but single quotes preferred
            "time_calculator.html",
            ^
.\app\modules\time_calculator\routes.py:97:19: Q000 Double quotes found but single quotes preferred
            error="Formato de hora inválido. Use HH:MM",
                  ^
.\format.py:6:1: I100 Import statements are in the wrong order. 'from pathlib import Path' should be before 'import sys'
from pathlib import Path
^
.\format.py:11:11: Q000 Double quotes found but single quotes preferred
    print(f"\n=== Running {description} ===")
          ^
.\format.py:15:63: Q000 Double quotes found but single quotes preferred
            command, capture_output=True, text=True, encoding="utf-8", errors="replace"
                                                              ^
.\format.py:15:79: Q000 Double quotes found but single quotes preferred
            command, capture_output=True, text=True, encoding="utf-8", errors="replace"
                                                                              ^
.\format.py:19:19: Q000 Double quotes found but single quotes preferred
            print(f"Errors:\n{result.stderr}", file=sys.stderr)
                  ^
.\format.py:22:15: Q000 Double quotes found but single quotes preferred
        print(f"Error running {description}: {str(e)}", file=sys.stderr)
              ^
.\format.py:29:5: F841 local variable 'project_root' is assigned to but never used
    project_root = Path(__file__).parent
    ^
.\format.py:33:11: Q000 Double quotes found but single quotes preferred
        (["isort", "."], "isort to sort imports"),
          ^
.\format.py:33:20: Q000 Double quotes found but single quotes preferred
        (["isort", "."], "isort to sort imports"),
                   ^
.\format.py:33:26: Q000 Double quotes found but single quotes preferred
        (["isort", "."], "isort to sort imports"),
                         ^
.\format.py:34:11: Q000 Double quotes found but single quotes preferred
        (["black", "."], "black to format code"),
          ^
.\format.py:34:20: Q000 Double quotes found but single quotes preferred
        (["black", "."], "black to format code"),
                   ^
.\format.py:34:26: Q000 Double quotes found but single quotes preferred
        (["black", "."], "black to format code"),
                         ^
.\format.py:35:11: Q000 Double quotes found but single quotes preferred
        (["autopep8", "--in-place", "--recursive", "."], "autopep8 to fix remaining issues"),
          ^
.\format.py:35:23: Q000 Double quotes found but single quotes preferred
        (["autopep8", "--in-place", "--recursive", "."], "autopep8 to fix remaining issues"),
                      ^
.\format.py:35:37: Q000 Double quotes found but single quotes preferred
        (["autopep8", "--in-place", "--recursive", "."], "autopep8 to fix remaining issues"),
                                    ^
.\format.py:35:52: Q000 Double quotes found but single quotes preferred
        (["autopep8", "--in-place", "--recursive", "."], "autopep8 to fix remaining issues"),
                                                   ^
.\format.py:35:58: Q000 Double quotes found but single quotes preferred
        (["autopep8", "--in-place", "--recursive", "."], "autopep8 to fix remaining issues"),
                                                         ^
.\format.py:37:14: Q000 Double quotes found but single quotes preferred
            ["flake8", "--output-file=flake8_report.txt", "."],
             ^
.\format.py:37:24: Q000 Double quotes found but single quotes preferred
            ["flake8", "--output-file=flake8_report.txt", "."],
                       ^
.\format.py:37:59: Q000 Double quotes found but single quotes preferred
            ["flake8", "--output-file=flake8_report.txt", "."],
                                                          ^
.\format.py:38:13: Q000 Double quotes found but single quotes preferred
            "flake8 to check for remaining issues",
            ^
.\format.py:51:17: Q000 Double quotes found but single quotes preferred
        if Path("flake8_report.txt").exists():
                ^
.\format.py:52:19: Q000 Double quotes found but single quotes preferred
            print("\n=== Flake8 Report ===")
                  ^
.\format.py:53:23: Q000 Double quotes found but single quotes preferred
            with open("flake8_report.txt", "r", encoding="utf-8") as f:
                      ^
.\format.py:53:44: Q000 Double quotes found but single quotes preferred
            with open("flake8_report.txt", "r", encoding="utf-8") as f:
                                           ^
.\format.py:53:58: Q000 Double quotes found but single quotes preferred
            with open("flake8_report.txt", "r", encoding="utf-8") as f:
                                                         ^
.\format.py:55:18: Q000 Double quotes found but single quotes preferred
            Path("flake8_report.txt").unlink()  # Remove o arquivo temporário
                 ^
.\format.py:57:15: Q000 Double quotes found but single quotes preferred
        print(f"Error reading flake8 report: {str(e)}", file=sys.stderr)
              ^
.\format.py:60:15: Q000 Double quotes found but single quotes preferred
